#BlueJ class context
comment0.target=BinarySearchTree
comment0.text=\n\ This\ BinarySearchTree\ object\ defines\ a\ reference\ based\ binary\ search\ tree\n\ \n\ @author\ \ \n\ @version\ \n
comment1.params=
comment1.target=BinarySearchTree()
comment10.params=tree\ level
comment10.target=java.lang.String\ toString(BinaryNode,\ int)
comment11.params=
comment11.target=java.util.List\ preorderTraverse()
comment12.params=tree\ list
comment12.target=void\ preorderTraverse(BinaryNode,\ java.util.List)
comment13.params=
comment13.target=java.util.List\ inorderTraverse()
comment14.params=tree\ list
comment14.target=void\ inorderTraverse(BinaryNode,\ java.util.List)
comment15.params=
comment15.target=java.util.List\ postorderTraverse()
comment16.params=tree\ list
comment16.target=void\ postorderTraverse(BinaryNode,\ java.util.List)
comment17.params=element
comment17.target=void\ remove(java.lang.Comparable)
comment18.params=element\ tree
comment18.target=BinaryNode\ remove(java.lang.Comparable,\ BinaryNode)
comment19.params=tree
comment19.target=BinaryNode\ removeNode(BinaryNode)
comment2.params=
comment2.target=boolean\ isEmpty()
comment20.params=tree
comment20.target=java.lang.Comparable\ getPredecessor(BinaryNode)
comment21.params=
comment21.target=void\ balance()
comment22.params=low\ high\ list
comment22.target=void\ refillTree(int,\ int,\ java.util.List)
comment3.params=
comment3.target=int\ size()
comment4.params=r
comment4.target=int\ size(BinaryNode)
comment5.params=element
comment5.target=void\ add(java.lang.Comparable)
comment6.params=element\ tree
comment6.target=BinaryNode\ add(java.lang.Comparable,\ BinaryNode)
comment7.params=element
comment7.target=boolean\ contains(java.lang.Comparable)
comment8.params=element\ tree
comment8.target=boolean\ contains(java.lang.Comparable,\ BinaryNode)
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=23
